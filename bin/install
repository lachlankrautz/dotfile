#!/usr/bin/env bash

PATH_BASE=

find_me() {
    # Find where we are installed through possible system links
    local SOURCE="${BASH_SOURCE[0]}"
    # resolve $SOURCE until the file is no longer a symlink
    while [ -h "${SOURCE}" ]; do
        PATH_BASE="$(cd -P "$(dirname "${SOURCE}")" && pwd)"
        SOURCE="$(readlink "${SOURCE}")"
        # if SOURCE was a relative symlink, we need to resolve it
        # relative to the path where the symlink file was located
        [[ ${SOURCE} != /* ]] && SOURCE="${PATH_BASE}/${SOURCE}"
    done
    PATH_BASE="$(cd -P "$(dirname "${SOURCE}")" && pwd)"
}

main() {
    find_me || return 1

    echo

    local UNAME
    UNAME="$(uname)"
    MSYS=0
    if [[ "${UNAME}" =~ ^(MINGW|MSYS).*$ ]]; then
        MSYS=1
    fi

    if [ ! -d /usr/local/bin ]; then
        mkdir -p /usr/local/bin || return 1
    fi

    local SRC="${PATH_BASE}/dotfile"
    local DEST=/usr/local/bin/dotfile
    local NAME=dotfile
    local NEED_LINK=0
    local LINK

    echo "Checking executable: ${NAME}"
    LINK="$(readlink "${DEST}")"

    if [ -n "${LINK}" ] && [ ! "${LINK}" = "${SRC}" ]; then
        NEED_LINK=1
        echo "Existing link points elsewhere, removing"
        rm "${DEST}" || {
            echo "Unable to remove bad link"
            return 1
        }
    fi
    if [ ! -f "${DEST}" ]; then
        NEED_LINK=1
    fi
    if [ "${NEED_LINK}" -eq 1 ]; then
        echo "Creating system link"
        if [ "${MSYS}" -eq 1 ]; then
            local WIN_SRC
            local WIN_DEST
            WIN_SRC="$(cygpath -w "${SRC}")"
            WIN_DEST="$(cygpath -w "${DEST}")"
            local CMD_C="mklink ${WIN_DEST} ${WIN_SRC}"
            cmd //C "${CMD_C}" > /dev/null || {
                echo "Unable to create system link (msys)"
                return 1
            }
        else
            ln -s "${SRC}" "${DEST}" || {
                echo "Unable to create system link"
                return 1
            }
        fi
    fi

    local LINK_DESCRIPTION="${DEST} -> ${SRC}"
    if [ ! -L "${DEST}" ] || [ "$(readlink "${DEST}")" != "${SRC}" ]; then
        echo "Unable to install link ${LINK_DESCRIPTION}"
        return 1
    fi

    echo "Link confirmed ${LINK_DESCRIPTION}"
    echo
}

main
